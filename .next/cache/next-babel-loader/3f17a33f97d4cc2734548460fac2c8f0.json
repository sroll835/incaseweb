{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Riano\\\\Documents\\\\Manuel Felipe Documentos\\\\MyProjects\\\\ECO2\\\\incaseweb\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n// import App from 'next/app'\nimport App from \"next/app\";\nimport React from \"react\";\nimport { Provider } from 'react-redux';\nimport store from '../store/ConfigureStore';\nimport { persistStore } from \"redux-persist\";\nimport { PersistGate } from 'redux-persist/integration/react';\n\nclass IncaseWeb extends App {\n  /*static async getInitialProps({Component, ctx}) {\r\n  console.log(\"Solo entre al app una vez\")\r\n    // we can dispatch from here too\r\n    ctx.store.dispatch({type: 'ADD_REG_PONTO', value: [{\"name\": \"Manuel Felipe\", \"ndoc\": 1018484513,\"horaingreso\":\"07:00:00 AM\", \"horasalida\":\"\"},\r\n    {\"name\": \"Daneil Felipe\", \"ndoc\":79280440,\"horaingreso\":\"07:12:02 AM\", \"horasalida\":\"\"}\r\n    ]});\r\n    const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\r\n  \r\n    return {pageProps};\r\n  }*/\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    const persistor = persistStore(store); //console.log(\"hello _app,js\")\n    //console.log(this.props.data); <PersistGate persistor={store.__persistor} loading={<div>Loading</div>}>\n\n    return __jsx(Provider, {\n      store: store,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 16\n      }\n    }, __jsx(PersistGate, {\n      loading: null,\n      persistor: persistor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 22\n      }\n    }, __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 18\n      }\n    }))));\n  }\n\n} // Only uncomment this method if you have blocking data requirements for  </PersistGate>\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n// MyApp.getInitialProps = async (appContext) => {\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\n//   const appProps = await App.getInitialProps(appContext);\n//\n//   return { ...appProps }\n// }\n\n\nexport default IncaseWeb;","map":{"version":3,"sources":["C:/Users/Riano/Documents/Manuel Felipe Documentos/MyProjects/ECO2/incaseweb/pages/_app.js"],"names":["App","React","Provider","store","persistStore","PersistGate","IncaseWeb","render","Component","pageProps","props","persistor"],"mappings":";;;;;AACA;AAEA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAAUC,YAAV,QAA6B,eAA7B;AACA,SAASC,WAAT,QAA4B,iCAA5B;;AACA,MAAMC,SAAN,SAAwBN,GAAxB,CAA4B;AAG1B;;;;;;;;;;AAUEO,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,SAAD;AAAYC,MAAAA;AAAZ,QAAyB,KAAKC,KAApC;AACA,UAAMC,SAAS,GAAGP,YAAY,CAACD,KAAD,CAA9B,CAFK,CAGX;AACM;;AACA,WACO,MAAC,QAAD;AAAW,MAAA,KAAK,EAAEA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,MAAC,WAAD;AAAa,MAAA,OAAO,EAAE,IAAtB;AAA4B,MAAA,SAAS,EAAEQ,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ,MAAC,SAAD,eAAeF,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADI,CADN,CADP;AAUH;;AA5BuB,C,CAiC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAgBH,SAAhB","sourcesContent":["\r\n// import App from 'next/app'\r\n\r\nimport App from \"next/app\";\r\nimport React from \"react\";\r\nimport { Provider } from 'react-redux'\r\nimport store from '../store/ConfigureStore'\r\nimport {  persistStore} from \"redux-persist\";\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nclass IncaseWeb extends App {\r\n\r\n   \r\n  /*static async getInitialProps({Component, ctx}) {\r\n  console.log(\"Solo entre al app una vez\")\r\n    // we can dispatch from here too\r\n    ctx.store.dispatch({type: 'ADD_REG_PONTO', value: [{\"name\": \"Manuel Felipe\", \"ndoc\": 1018484513,\"horaingreso\":\"07:00:00 AM\", \"horasalida\":\"\"},\r\n    {\"name\": \"Daneil Felipe\", \"ndoc\":79280440,\"horaingreso\":\"07:12:02 AM\", \"horasalida\":\"\"}\r\n    ]});\r\n    const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\r\n  \r\n    return {pageProps};\r\n}*/\r\n    render() {\r\n        const {Component, pageProps} = this.props;\r\n        const persistor = persistStore(store); \r\n  //console.log(\"hello _app,js\")\r\n        //console.log(this.props.data); <PersistGate persistor={store.__persistor} loading={<div>Loading</div>}>\r\n        return (\r\n               <Provider  store={store}>\r\n                     <PersistGate loading={null} persistor={persistor}>\r\n                 <Component {...pageProps} />\r\n                 </PersistGate>\r\n               </Provider>\r\n               \r\n         \r\n           \r\n        );\r\n    }\r\n\r\n}\r\n\r\n  \r\n  // Only uncomment this method if you have blocking data requirements for  </PersistGate>\r\n  // every single page in your application. This disables the ability to\r\n  // perform automatic static optimization, causing every page in your app to\r\n  // be server-side rendered.\r\n  //\r\n  // MyApp.getInitialProps = async (appContext) => {\r\n  //   // calls page's `getInitialProps` and fills `appProps.pageProps`\r\n  //   const appProps = await App.getInitialProps(appContext);\r\n  //\r\n  //   return { ...appProps }\r\n  // }\r\n  \r\n  export default (IncaseWeb); "]},"metadata":{},"sourceType":"module"}