{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.ad3b7ffceeb882919bb5.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["\r\n// import App from 'next/app'\r\n\r\nimport App from \"next/app\";\r\nimport React from \"react\";\r\nimport { Provider } from 'react-redux'\r\nimport store from '../store/ConfigureStore'\r\nclass IncaseWeb extends App {\r\n\r\n   \r\n  /*static async getInitialProps({Component, ctx}) {\r\n  console.log(\"Solo entre al app una vez\")\r\n    // we can dispatch from here too\r\n    ctx.store.dispatch({type: 'ADD_REG_PONTO', value: [{\"name\": \"Manuel Felipe\", \"ndoc\": 1018484513,\"horaingreso\":\"07:00:00 AM\", \"horasalida\":\"\"},\r\n    {\"name\": \"Daneil Felipe\", \"ndoc\":79280440,\"horaingreso\":\"07:12:02 AM\", \"horasalida\":\"\"}\r\n    ]});\r\n    const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\r\n  \r\n    return {pageProps};\r\n}*/\r\n    render() {\r\n        const {Component, pageProps} = this.props;\r\n  //console.log(\"hello _app,js\")\r\n        //console.log(this.props.data); <PersistGate persistor={store.__persistor} loading={<div>Loading</div>}>\r\n        return (\r\n               <Provider  store={store}>\r\n                 <Component {...pageProps} />\r\n               </Provider>\r\n               \r\n         \r\n           \r\n        );\r\n    }\r\n\r\n}\r\n\r\n  \r\n  // Only uncomment this method if you have blocking data requirements for  </PersistGate>\r\n  // every single page in your application. This disables the ability to\r\n  // perform automatic static optimization, causing every page in your app to\r\n  // be server-side rendered.\r\n  //\r\n  // MyApp.getInitialProps = async (appContext) => {\r\n  //   // calls page's `getInitialProps` and fills `appProps.pageProps`\r\n  //   const appProps = await App.getInitialProps(appContext);\r\n  //\r\n  //   return { ...appProps }\r\n  // }\r\n  \r\n  export default (IncaseWeb); "],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;AAGA;;;;;;;;;;AAUA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AAOA;;;;AAzBA;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;A","sourceRoot":""}