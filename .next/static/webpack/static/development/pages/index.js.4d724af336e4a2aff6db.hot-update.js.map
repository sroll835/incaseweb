{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.4d724af336e4a2aff6db.hot-update.js","sources":["webpack:///./utils/auth.js"],"sourcesContent":["import Router from \"next/router\";\r\nimport nextCookie from \"next-cookies\";\r\nimport cookie from \"js-cookie\";\r\n\r\nexport const auth = (ctx) => {\r\n  const { token } = nextCookie(ctx);\r\nconsole.log(\"token\" + token)\r\n  if (ctx.req && !token) {\r\n    ctx.res.writeHead(302, { Location: \"/login\" });\r\n    ctx.res.end();\r\n    console.log(\"Esrribi algo\")\r\n    return;\r\n  }\r\n\r\n  if (!token) {\r\n    Router.push(\"/login\");\r\n  }\r\n\r\n  return token;\r\n};\r\n\r\n// Gets the display name of a JSX component for dev tools\r\nconst getDisplayName = (Component) =>\r\n  Component.displayName || Component.name || \"Component\";\r\n\r\nexport const withAuthSync = (WrappedComponent) =>\r\n  class extends Component {\r\n    static displayName = `withAuthSync(${getDisplayName(WrappedComponent)})`;\r\n\r\n    static async getInitialProps(ctx) {\r\n      const token = auth(ctx);\r\n\r\n      const componentProps =\r\n        WrappedComponent.getInitialProps &&\r\n        (await WrappedComponent.getInitialProps(ctx));\r\n\r\n      return { ...componentProps, token };\r\n    }\r\n\r\n    // New: We bind our methods\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.syncLogout = this.syncLogout.bind(this);\r\n    }\r\n\r\n    // New: Add event listener when a restricted Page Component mounts\r\n    componentDidMount() {\r\n      window.addEventListener(\"storage\", this.syncLogout);\r\n    }\r\n\r\n    // New: Remove event listener when the Component unmount and\r\n    // delete all data\r\n    componentWillUnmount() {\r\n      window.removeEventListener(\"storage\", this.syncLogout);\r\n      window.localStorage.removeItem(\"logout\");\r\n    }\r\n\r\n    // New: Method to redirect the user when the event is called\r\n    syncLogout(event) {\r\n      if (event.key === \"logout\") {\r\n        console.log(\"logged out from storage!\");\r\n        Router.push(\"/login\");\r\n      }\r\n    }\r\n\r\n    render() {\r\n      return <WrappedComponent {...this.props} />;\r\n    }\r\n  };\r\n\r\nexport const logout = () => {\r\n  cookie.remove(\"token\");\r\n  // To trigger the event listener we save some random data into the `logout` key\r\n  window.localStorage.setItem(\"logout\", Date.now()); // new\r\n  Router.push(\"/login\");\r\n};\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AALA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAOA;AAPA;AAWA;AAXA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAcA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AAHA;AAIA;AACA;AACA;AArBA;AAAA;AAAA;AAuBA;AACA;AAGA;AACA;AA5BA;AAAA;AAAA;AA6BA;AACA;AACA;AACA;AAhCA;AAAA;AAAA;AAmCA;AACA;AACA;AACA;AACA;AAvCA;AAAA;AAAA;AA0CA;AACA;AA3CA;AACA;AADA;AAAA;AAAA;AA8CA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;A","sourceRoot":""}