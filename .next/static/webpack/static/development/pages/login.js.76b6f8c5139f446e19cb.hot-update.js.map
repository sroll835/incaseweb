{"version":3,"file":"static/webpack/static\\development\\pages\\login.js.76b6f8c5139f446e19cb.hot-update.js","sources":["webpack:///./pages/login.js"],"sourcesContent":["\r\nimport Head from \"next/head\";\r\nimport Header from \"../components/Header\";\r\nimport { Component } from \"react\";\r\nimport  Link  from \"next/link\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport \"../components/Login.scss\";\r\nimport { Cookies } from \"react-cookie\";\r\nimport Router from \"next/router\";\r\nimport {connect} from \"react-redux\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { green, purple } from '@material-ui/core/colors';\r\nimport Modal from 'react-modal';\r\nimport { createUsuario } from \"../API/helpersAPI\";\r\nconst imgUrl = '/static/contemplative-reptile.jpg'\r\nconst customStyles = {\r\n\r\n  content : {\r\n    top                   : '50%',\r\n    left                  : '50%',\r\n    right                 : 'auto',\r\n    bottom                : 'auto',\r\n    marginRight           : '-50%',\r\n    transform             : 'translate(-50%, -50%)',\r\n\r\n  }\r\n};\r\n \r\nconst appTitle = `WHATABYTE`;\r\nconst cookies = new Cookies();\r\nvar subtitle = \"dddd\" ;\r\n\r\n    const styles2 = {\r\n     \r\n      }\r\n\r\nclass Login extends Component {\r\n\r\n  static getInitialProps({ store,req }) {\r\n    console.log(\"la store:\"+store)\r\n\r\n    const apiUrl = \"http://localhost:8080/auth/login\";\r\n    \r\n    return { apiUrl };\r\n  }\r\n \r\n  constructor(props) {\r\n    super(props);\r\n    const { send } = require(\"micro\");\r\n \r\n    this.state = {\r\n      correo: \"\",\r\n      clave: \"\",\r\n      error: \"\",\r\n      token: cookies.get(\"token\") || null,\r\n      modalIsOpen: false,\r\n      nom_reg : \"\",\r\n      apell_reg:\"\",\r\n      correo_reg:\"\",\r\n      clave_reg:\"\"\r\n\r\n    };\r\n    \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChangePassword = this.handleChangePassword.bind(this);\r\n    this.handleChangeNomReg  = this.handleChangeNomReg.bind(this);\r\n    this.handleChangeApellReg = this.handleChangeApellReg.bind(this);\r\n    this.handleChangeCorreoReg  = this.handleChangeCorreoReg.bind(this);\r\n    this.handleChangePasswordReg = this.handleChangePasswordReg.bind(this);\r\n    this.createUser = this.createUser.bind(this);\r\n    this.openModal = this.openModal.bind(this);\r\n    this.closeModal = this.closeModal.bind(this);\r\n    Modal.setAppElement('body');\r\n  } \r\n\r\n  // MODAL FUNCTIONS\r\n\r\n  openModal() {\r\n    this.setState({ modalIsOpen: true });\r\n  }\r\n  \r\n   afterOpenModal() {\r\n    // references are now sync'd and can be accessed.\r\n   // subtitle.style.color = '#f00';\r\n  }\r\n \r\n   closeModal(){\r\n    this.setState({ modalIsOpen: false });\r\n  }\r\n\r\n  // HANDLE EVENT TO CHANGE THE STATE VALUE \r\n\r\n  handleChange(event) {\r\n    this.setState({ correo: event.target.value });\r\n  }\r\n\r\n  handleChangePassword(event) {\r\n    this.setState({ clave: event.target.value });\r\n  }\r\n  handleChangeNomReg(event) {\r\n    this.setState({ nom_reg: event.target.value });\r\n  }\r\n   \r\n  handleChangeApellReg(event){\r\n    this.setState({ apell_reg: event.target.value });\r\n  }\r\n  handleChangeCorreoReg(event){\r\n    this.setState({ correo_reg: event.target.value });\r\n  }\r\n  handleChangePasswordReg(event){\r\n    this.setState({ clave_reg: event.target.value });\r\n  }\r\n  \r\n  //  WEB SERVICES FUNCTIONS \r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const _correo = this.state.correo;\r\n      const _clave = this.state.clave;\r\n      const url = this.props.apiUrl;\r\n      const body = { correo: _correo, clave: _clave };\r\n      const response = await fetch(url, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (data.status === 200) {\r\n        const token = data.access_token;\r\n        cookies.set(\"token\", token);\r\n        const action = { type: 'ADD_USER_ID' ,payload: data.user_id }\r\n        this.props.dispatch(action);\r\n        Router.push(\"/\");\r\n      } else {\r\n        let error = new Error(data.message);\r\n        error.data = data;\r\n        this.setState({\r\n          error: data.message,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\r\n        \"You have an error in your code or there are Network issues.\",\r\n        error\r\n      );\r\n\r\n      throw new Error(error);\r\n    }\r\n  }\r\n \r\nasync createUser() {\r\n  \r\n     let _toinsert =  {\"nombre\": this.state.nom_reg, \"apellido\":this.state.apell_reg,\"correo\": this.state.correo_reg, \"clave\": this.state.clave_reg};    \r\n     createUsuario(_toinsert).then(response => \r\n      {\r\n        console.log(response);\r\n      }\r\n    );\r\n}\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div className=\"Login\">\r\n        <Head>\r\n          <title>WHATABYTE</title>\r\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n          <meta charSet=\"utf-8\" />\r\n        </Head>\r\n\r\n        <Header appTitle={appTitle} />\r\n        <div className=\"Content\">\r\n          <div>\r\n          <h3>Bienvenido a {appTitle} , Porfavor digite su usuario y contrasena :  </h3>           \r\n          </div>\r\n       \r\n          <div className=\"login\">\r\n            <form>\r\n              <label htmlFor=\"correo\">Usuario</label>\r\n\r\n              <input\r\n                type=\"text\"\r\n                id=\"correo\"\r\n                name=\"correo\"\r\n                value={this.state.correo}\r\n                onChange={this.handleChange}\r\n              />\r\n              <label htmlFor=\"clave\">Contraseña</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"clave\"\r\n                name=\"clave\"\r\n                value={this.state.clave}\r\n                onChange={this.handleChangePassword}\r\n              />\r\n\r\n              <Button variant=\"contained\" color=\"primary\" onClick={this.handleSubmit}>\r\n                Iniciar Sesion\r\n              </Button>\r\n              \r\n               <label>o</label>\r\n         \r\n               <a className=\"registertext\" onClick={this.openModal}>Registrate</a>\r\n              \r\n                <p className={`error ${this.state.error && \"show\"}`}>\r\n                {this.state.error && `Error: ${this.state.error}`}\r\n              </p>\r\n            </form>\r\n          </div>\r\n          <div>\r\n            <Modal\r\n              isOpen={this.state.modalIsOpen}\r\n              onAfterOpen={this.afterOpenModal}\r\n              onRequestClose={this.closeModal}\r\n              style={customStyles}\r\n              contentLabel=\"Example Modal\"\r\n            >\r\n\r\n              <div className=\"headermodal\">\r\n              ¡ Regístrate y comienza a aprender &nbsp;!\r\n              <button aria-label=\"Cerrar\" type=\"button\" className=\"modalclose\" onClick={this.closeModal}><span aria-hidden=\"true\">×</span></button>\r\n\r\n              </div>\r\n               <div className=\"contentmodal\">\r\n            \r\n              <form>\r\n                <label htmlFor=\"nombre\">Nombre</label>\r\n\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"nombre_reg\"\r\n                  name=\"nombre_reg\"\r\n                  value={this.state.nom_reg}\r\n                  onChange={this.handleChangeNomReg}\r\n                />\r\n                <label htmlFor=\"apellido\">Apellido</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"apellido_reg\"\r\n                  name=\"apellido_reg\"\r\n                  value={this.state.apell_reg}\r\n                  onChange={this.handleChangeApellReg}\r\n                />\r\n                 <label htmlFor=\"correo\">Correo</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"correo_reg\"\r\n                  name=\"correo_reg\"\r\n                  value={this.state.correo_reg}\r\n                  onChange={this.handleChangeCorreoReg}\r\n                />\r\n                 <label htmlFor=\"clave\">Contraseña</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"clave_reg\"\r\n                  name=\"clave_reg\"\r\n                  value={this.state.clave_reg}\r\n                  onChange={this.handleChangePasswordReg}\r\n                />\r\n                 <Button variant=\"contained\" color=\"secondary\" className=\"buttonregister\" onClick={this.createUser}>\r\n                Registrarse\r\n              </Button>\r\n              \r\n\r\n              </form>\r\n              <div className=\"secondarytext\">\r\n              Al registrarse, acepta nuestras \r\n               <a href=\"/terms/\" target=\"_blank\">condiciones generales de uso</a>\r\n               y <a href=\"/terms/privacy/\" target=\"_blank\">nuestra política de privacidad</a>.\r\n              </div>\r\n              </div>\r\n            </Modal>\r\n          </div>\r\n        </div>\r\n        <style jsx>{`\r\n          .login {\r\n            max-width: 340px;\r\n            margin: 0 auto;\r\n            padding: 1rem;\r\n            border: 1px solid #ccc;\r\n            border-radius: 4px;\r\n            text-align: center;\r\n          }\r\n          form {\r\n            display: flex;\r\n            flex-flow: column;\r\n          }\r\n          label {\r\n            font-weight: 600;\r\n          }\r\n          input {\r\n            padding: 8px;\r\n            margin: 0.2rem 0 1rem;\r\n            border: 1px solid #ccc;\r\n            border-radius: 4px;\r\n          }\r\n          .error {\r\n            margin: 0.5rem 0 0;\r\n            display: none;\r\n            color: brown;\r\n          }\r\n          .error.show {\r\n            display: block;\r\n          }\r\n          .headermodal{\r\n            border-bottom: solid 1px #dedfe0;\r\n            border-top-left-radius: 6px;\r\n            border-top-right-radius: 6px;\r\n            color: #29303b;\r\n            display: block;\r\n            font-weight: 700;\r\n            font-size: 15px;\r\n            padding: 24px 64px 24px 24px; \r\n          }\r\n          .buttonregister{\r\n            font-size: 16px;\r\n            font-weight: 700;\r\n            height: 48px;\r\n            margin-bottom: 16px;\r\n            width: 100%;\r\n          }\r\n          .contentmodal{\r\n            padding: 24px 24px 16px;\r\n          }\r\n          .modalclose{\r\n            color: #686f7a;\r\n            font-size: 36px;\r\n            font-weight: 400;\r\n            opacity: 1;\r\n            position: relative;\r\n            z-index: 3;\r\n            padding: 0 8px;\r\n            background-color: white;\r\n            border: none;\r\n            overflow: hidden;\r\n            margin-bottom: 0;\r\n            margin-top: -8px;\r\n            position: absolute;\r\n            right: 24px;\r\n            top: 24px;\r\n          }\r\n          .secondarytext{\r\n            margin: 0 0 16px;\r\n            margin-top: 10px;\r\n            font-size: 10px;\r\n            text-align: center;\r\n          }\r\n        `}</style>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  (state) => state,\r\n\r\n)(Login);\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AAaA;AACA;AACA;AAEA;AACA;AAGA;;;;;;;AAEA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BA;AA4BA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AAEA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;AACA;;;AAGA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AAGA;;;;;;;AACA;;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;AACA;AADA;AAGA;AALA;AACA;;AADA;;AAQA;AACA;;AADA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;;;;;;;AACA;AAKA;AACA;;;;;;;;;;;;;;;;;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;;;;;;;;;;AAGA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAzGA;AAAA;AAAA;AA2LA;;;;AAhUA;AACA;AAkUA;AACA;AAAA;;;;A","sourceRoot":""}